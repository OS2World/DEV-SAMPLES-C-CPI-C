#
#   PROGRAM:   JQCPIC -- John Q's Portable CPI-C Abuser
#
#   MODULE:    MAKEFILE -- for Microsoft C version 6.00A
#
#   COPYRIGHTS:
#              This module contains code made available by IBM
#              Corporation on an AS IS basis.  Any one receiving the
#              module is considered to be licensed under IBM copyrights
#              to use the IBM-provided source code in any way he or she
#              deems fit, including copying it, compiling it, modifying
#              it, and redistributing it, with or without
#              modifications.  No license under any IBM patents or
#              patent applications is to be implied from this copyright
#              license.
#
#              A user of the module should understand that IBM cannot
#              provide technical support for the module and will not be
#              responsible for any consequences of use of the program.
#
#              Any notices, including this one, are not to be removed
#              from the module without the prior written consent of
#              IBM.
#
#   AUTHOR:    Dr. John Q. Walker II
#              IBM VNET: JOHNQ at RALVM6          IBM tie line: 444-4414
#              Internet: johnq@vnet.ibm.com        phone: (919) 254-4414
#
#   RELATED FILES:
#              See file JQCPIC.DOC for detailed information.
#
#   CHANGE HISTORY:
#   Date       Description
#   05/12/92   Added prologue.
#   06/07/92   Removed usage.c file.
#   06/24/92   Added port.c
#-----------------------------------------------------------------------

# Source file extension
C = .c
# Source file extension
H = .h
# Object module extension
OBJ = .obj
# Executable file extension
EXE = .exe
# Base library (change this to match your library structure)
BASELIB = clibce+

all: jqcpic$(EXE) jqcpicd$(EXE)

# Define NOCPIC is you don't want to make any real CPI-C calls.
#DEFS = -DNOCPIC
DEFS =

CC     = cl
CFLAGS = -c -Zelp -AC -G0 -W4 -Ozax $(DEFS)
#CFLAGS = -c -Zip -AC -G0 -W4 -Od $(DEFS)

LINK   = link
LFLAGS = /F /NOD /NOE /NOI /PACKC /PACKD /PMTYPE:VIO /EXEPACK
#LFLAGS = /F /NOD /NOE /NOI /PACKC /PACKD /PMTYPE:VIO /CODEVIEW

INCS   = jqcpic$(H) cpicdefs$(H) calls$(H) build$(H) port$(H)

#-----------------------------------------------------------------------

# Build the client-side executable
jqcpic$(EXE)   :  jqcpic$(OBJ)   \
                  build$(OBJ)    \
                  calls$(OBJ)    \
                  cmdlin$(OBJ)   \
                  cpicdefs$(OBJ) \
                  port$(OBJ)     \
                  show$(OBJ)
        $(LINK) $(LFLAGS) $*+build+calls+cmdlin+cpicdefs+port+show,\
                       $*.exe, nul.map,\
                       $(BASELIB)\
                       cpic+\
                       doscalls,,
# To build a family-API version with NS/DOS, execute the following:
#       bind $*   CPIC.LIB CPICNSDR.LIB


# Build the server-side executable
jqcpicd$(EXE)  :  jqcpicd$(OBJ)  \
                  build$(OBJ)    \
                  calls$(OBJ)    \
                  cmdlin$(OBJ)   \
                  cpicdefs$(OBJ) \
                  port$(OBJ)     \
                  show$(OBJ)
        $(LINK) $(LFLAGS) $*+build+calls+cmdlin+cpicdefs+port+show,\
                       $*.exe, nul.map,\
                       $(BASELIB)\
                       cpic+\
                       doscalls,,
# To build a family-API version with NS/DOS, execute the following:
#       bind $*   CPIC.LIB CPICNSDR.LIB

#-----------------------------------------------------------------------

jqcpic$(OBJ)   :  jqcpic$(C)    $(INCS)
        $(CC) $(CFLAGS) jqcpic$(C)

jqcpicd$(OBJ)  :  jqcpic$(C)    $(INCS)
        $(CC) $(CFLAGS) -DSERVER_SIDE -Fo$* jqcpic$(C)

build$(OBJ)    :  build$(C)     $(INCS)
        $(CC) $(CFLAGS) $*$(C)

calls$(OBJ)    :  calls$(C)     $(INCS)
        $(CC) $(CFLAGS) $*$(C)

cmdlin$(OBJ)   :  cmdlin$(C)    $(INCS)
        $(CC) $(CFLAGS) $*$(C)

cpicdefs$(OBJ) :  cpicdefs$(C)  $(INCS)
        $(CC) $(CFLAGS) $*$(C)

port$(OBJ)     :  port$(C)      $(INCS)
        $(CC) $(CFLAGS) $*$(C)

show$(OBJ)     :  show$(C)      $(INCS)
        $(CC) $(CFLAGS) $*$(C)

